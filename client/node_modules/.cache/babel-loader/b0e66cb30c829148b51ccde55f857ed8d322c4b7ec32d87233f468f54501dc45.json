{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aygun\\\\Desktop\\\\Personel-takip\\\\client\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/employees');\n        const data = await response.json();\n        setEmployees(data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleExit = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employees/${id}/exit`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        const updatedEmployee = await response.json();\n        setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === id ? updatedEmployee.employee : employee));\n      } else {\n        console.error('Error updating exit time');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [employee.name, \" - \", employee.email, \" - \", employee.position, \" - \", employee.department, \" - \", employee.phone, \" - \", employee.date, \" - \", employee.time]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","fetchEmployees","response","fetch","data","json","error","console","handleExit","id","method","ok","updatedEmployee","prevEmployees","map","employee","children","fileName","_jsxFileName","lineNumber","columnNumber","index","name","email","position","department","phone","date","time","_c","$RefreshReg$"],"sources":["C:/Users/aygun/Desktop/Personel-takip/client/src/components/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/employees');\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n  const handleExit = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/employees/${id}/exit`, {\r\n        method: 'PUT',\r\n      });\r\n      if (response.ok) {\r\n        const updatedEmployee = await response.json();\r\n        setEmployees((prevEmployees) =>\r\n          prevEmployees.map((employee) =>\r\n            employee.id === id ? updatedEmployee.employee : employee\r\n          )\r\n        );\r\n      } else {\r\n        console.error('Error updating exit time');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee List</h1>\r\n      <ul>\r\n        {employees.map((employee, index) => (\r\n          <li key={index}>\r\n            {employee.name} - {employee.email} - {employee.position} - {employee.department} - {employee.phone} - {employee.date} - {employee.time}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMO,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCM,EAAE,OAAO,EAAE;QAC7EC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf,MAAMC,eAAe,GAAG,MAAMV,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC7CL,YAAY,CAAEa,aAAa,IACzBA,aAAa,CAACC,GAAG,CAAEC,QAAQ,IACzBA,QAAQ,CAACN,EAAE,KAAKA,EAAE,GAAGG,eAAe,CAACG,QAAQ,GAAGA,QAClD,CACF,CAAC;MACH,CAAC,MAAM;QACLR,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAID,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA;MAAAoB,QAAA,EACGjB,SAAS,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEM,KAAK,kBAC7BzB,OAAA;QAAAoB,QAAA,GACGD,QAAQ,CAACO,IAAI,EAAC,KAAG,EAACP,QAAQ,CAACQ,KAAK,EAAC,KAAG,EAACR,QAAQ,CAACS,QAAQ,EAAC,KAAG,EAACT,QAAQ,CAACU,UAAU,EAAC,KAAG,EAACV,QAAQ,CAACW,KAAK,EAAC,KAAG,EAACX,QAAQ,CAACY,IAAI,EAAC,KAAG,EAACZ,QAAQ,CAACa,IAAI;MAAA,GAD/HP,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlDID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}