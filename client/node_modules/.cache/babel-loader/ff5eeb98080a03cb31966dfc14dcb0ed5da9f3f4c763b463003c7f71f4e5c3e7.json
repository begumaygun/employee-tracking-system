{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aygun\\\\Desktop\\\\Personel-takip\\\\client\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EmployeeForm from './EmployeeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/employees');\n        const data = await response.json();\n        setEmployees(data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const addEmployee = newEmployee => {\n    setEmployees(prevEmployees => [...prevEmployees, newEmployee]);\n  };\n  const handleExit = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employees/${id}/exit`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        const updatedEmployee = await response.json();\n        setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === id ? updatedEmployee.employee : employee));\n      } else {\n        console.error('Error updating exit time');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      addEmployee: addEmployee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [employee.name, \" - \", employee.email, \" - \", employee.position, \" - \", employee.department, \" - \", employee.phone, \" - Giri\\u015F: \", employee.entryDate, \" \", employee.entryTime, \" - \\xC7\\u0131k\\u0131\\u015F: \", employee.exitDate ? employee.exitDate : '-', \" \", employee.exitTime ? employee.exitTime : '-', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleExit(employee.id),\n          children: \"\\xC7\\u0131k\\u0131\\u015F Yap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, employee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeForm","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","fetchEmployees","response","fetch","data","json","error","console","addEmployee","newEmployee","prevEmployees","handleExit","id","method","ok","updatedEmployee","map","employee","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","position","department","phone","entryDate","entryTime","exitDate","exitTime","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aygun/Desktop/Personel-takip/client/src/components/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EmployeeForm from './EmployeeForm';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/employees');\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const addEmployee = (newEmployee) => {\r\n    setEmployees((prevEmployees) => [...prevEmployees, newEmployee]);\r\n  };\r\n\r\n  const handleExit = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/employees/${id}/exit`, {\r\n        method: 'PUT',\r\n      });\r\n      if (response.ok) {\r\n        const updatedEmployee = await response.json();\r\n        setEmployees((prevEmployees) =>\r\n          prevEmployees.map((employee) =>\r\n            employee.id === id ? updatedEmployee.employee : employee\r\n          )\r\n        );\r\n      } else {\r\n        console.error('Error updating exit time');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee List</h1>\r\n      <EmployeeForm addEmployee={addEmployee} />\r\n      <ul>\r\n        {employees.map((employee) => (\r\n          <li key={employee.id}>\r\n            {employee.name} - {employee.email} - {employee.position} - {employee.department} - {employee.phone} - Giriş: {employee.entryDate} {employee.entryTime} - Çıkış: {employee.exitDate ? employee.exitDate : '-'} {employee.exitTime ? employee.exitTime : '-'}\r\n            <button onClick={() => handleExit(employee.id)}>Çıkış Yap</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}